import {
  Box,
  Button,
  Grid,
  Typography,
  CardContent,
  CardActions,
  Card,
  Dialog,
  DialogTitle,
} from "@mui/material";
import Head from "next/head";
import Link from "next/link";
import React, { useState, useEffect } from "react";
import DashboardNavbar from "../../components/dashboard-navbar";
import styles from "../../styles/Home.module.css";
import ViewPortfolio from "./view-portfolio";

export class Dashboard extends React.Component<{}, {
  portfolios: any[],
  showDialog: boolean,
  dialogItem: any
}> {
  constructor(props: any) {
    super(props);

    this.state = {
      portfolios: [],
      showDialog: false,
      dialogItem: {}
    }
  }

  async fetchPortfolios() {
    if (typeof window != "undefined") {
      const user = JSON.parse(localStorage.getItem("user")!) as any;

      const resp = await fetch(`/api/portfolio?user=${user._id}`, {
        method: "GET",
        headers: {
          "Content-Type": "application/json",
        },
      });

      const json = await resp.json();
      if (json.success == true) {
        this.setState({ portfolios: json.data });

        if (json.data.length > 0) {
          this.setState({ dialogItem: json.data[0] })
        }
      }
    }
  }

  componentDidMount() {
    this.fetchPortfolios()
  }

  removePortfolioCard(item: any) {
    fetch(`/api/portfolio?id=${item._id}`, {
      method: "DELETE",
      headers: {
        "Content-type": "application/json",
      },
    }).then(async (resp) => {
      const json = await resp.json();
      if (json.success == true) {
        await this.fetchPortfolios();
        // setPortfolios(json.item);
      }
    });
  };

  render() {
    return (
      <div className={styles.container}>
        <Head>
          <title>Create Next App</title>
          <meta name="description" content="Generated by create next app" />
          <link rel="icon" href="/favicon.ico" />
        </Head>

        <main>
          <DashboardNavbar />

          <Grid container spacing={2} style={{ marginTop: "20px" }}>
            {this.state.portfolios.map((item: any) => (
              <Grid item xs={12} md={4} lg={3} key={item._id}>
                <Card sx={{ minWidth: 275 }}>
                  <CardContent>
                    <Typography
                      sx={{ fontSize: 14 }}
                      color="text.secondary"
                      gutterBottom
                    >
                      Portfolio Summary
                    </Typography>
                    <Typography variant="h5" component="div">
                      Education Experience
                    </Typography>
                    Attended {item.education?.school}
                    From {item.education?.from} To {item.education?.to} and
                    obtained {item.education?.certificate}
                    <br />
                    <Typography variant="h5" component="div">
                      Work Experience
                    </Typography>
                    <br />
                    worked in {item.Work?.company.name}
                    From {item.education?.from} To {item.education?.to} and
                    obtained {item.education?.certificate}
                    <br />
                    <Typography variant="h5" component="div">
                      Notable Experience
                      <br />
                    </Typography>
                  </CardContent>

                  <Dialog onClose={() => this.setState({ showDialog: false })} open={this.state.showDialog}>
                    {/* <DialogTitle>Portfolio Details</DialogTitle> */}
                    <ViewPortfolio portfolio={item} />
                  </Dialog>

                  <CardActions>
                    <Button size="small"
                      onClick={() => this.setState({
                        showDialog: true,
                        dialogItem: item
                      })}
                    >view</Button>
                    <br />

                    <Button size="small" onClick={() => this.removePortfolioCard(item)}>
                      delete
                    </Button>
                  </CardActions>
                </Card>
              </Grid>
            ))}
          </Grid>

          <Link href="/dashboard/new-portfolio">
            <Box textAlign="center" marginTop="100px">
              <Button variant="contained" color="primary">
                Add Portfolio
              </Button>
            </Box>
          </Link>
        </main>
      </div>
    );
  }
};

export default Dashboard;
